Golden Contact Computing - Parallax
-------------------

About:
-----------------

Parallax executes multiple commands in parallel.

The original use of this tool was to run Selenium Grid tests in parallel. The Selenium grid we're using is Saucelabs,
but you can run parallel tests on any grid.

There are two ways to use Parallax. The first, is using a command line interface, which will ask you for the commands
that you want executing

parallax autopilot execute *autopilot-file*


Installation
-----------------

To install parallax cli on your machine do the following. If you already have php5 and git installed skip line 1:

sudo apt-get install php5 git

git clone https://github.com/phpengine/parallax && sudo php parallax/install-silent

or...

git clone https://github.com/phpengine/parallax && sudo php parallax/install
(if you want to choose the install location)

... that's it, now the parallax command should be available at the command line for you.

---------------------------------------

The parallax Application
---------------------------------------

There are three directories in the src dir - Core, Extensions and Modules.

Core is just like it sounds, the most important files required for the Application to run (not including the Autoload
and Bootstrap, which you can call Super Core if you want). You never need to modify anything in here. The engine for
this application is about 600 lines in total, so its very lightweight. If you really insist on overriding things in
core, you can create a module (or even just a class with the same name, placed in a directory) and put it in the
Extensions Directory. The App will always look in there first when looking for a file. If it finds it there, it wont
look in Modules or Core. So, don't change Core, it'll make your life easier.

Modules again, is just like it sounds. Here are the Modules that cover the commands provided with the parallax
Application. As with any true Modular/Componentised structure, you should be able to remove any Module, and the rest
still work. This is the theory, and there is no real world example I can think of that means you would need to do this
unless you add your own Modules, and there are errors in them - even in that case, your module should not be in this
directory anyway. The only module that might go against this rule is the AppSettings/AppConfig, as any module can call
on it ask for configuration values

Extensions, as you may have noticed, is empty. It's purposely empty, for your own extensions. You can write new modules,
or override currently implemented classes with your own. Put them in here. Simples.



Available Commands:
---------------------------------------

Remember - You can get full help on any command by entering parallax command help ie parallax install help.
Also Remember - parallax is very extendable and modular, so everything can be overridden easily and new commands or
features can be added easily too. Below describes only the commands that are currently in core.

autopilot
      - execute
        Use the presets provided in an autopilot file to execute multiple commands. Depending on your configuration,
        you will not be asked any questions at the command line.
        example: parallax autopilot execute *autopilot file path*

cli
      - execute
        Use the CLI of parallax to enter the commands that you want to execute in parallel, then choose how you want the
        output of these files to be stored. You can choose between aggregating all command output into a single file,
        into multiple files, or forwarded to the output of parallax. You can also choose to fail exit on child fail.
        This will mean that if any of the spawned processes end with a failed exit code, Parallax will too..
        example: parallax cli execute

background
      - execute
        This is used by parallax to execute child processes. Its available, but you won't be using it outside of
        development
        example: parallax background execute